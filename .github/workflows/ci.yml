name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    env:
      BASE_URL: http://localhost:8000
      PYTHON_VERSION: "3.12"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install test deps
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & start stack (db, app, nginx)
        run: |
          docker compose up -d --build db app nginx

      - name: Wait for Postgres and ensure schema
        run: |
          for i in {1..30}; do
            docker compose exec -T db pg_isready -U postgres -d appdb && break
            sleep 2
          done
          docker compose exec -T db psql -U postgres -d appdb -c "
            CREATE TABLE IF NOT EXISTS items (
              id SERIAL PRIMARY KEY,
              name TEXT NOT NULL,
              created_at TIMESTAMP DEFAULT NOW()
            );"

      - name: Wait for backend (/health)
        run: |
          for i in {1..60}; do
            curl -fsS ${BASE_URL}/health && exit 0
            sleep 2
          done
          echo 'Backend not ready' >&2
          docker compose ps
          exit 1

      - name: Run integration tests
        run: python scripts/test_app.py

      - name: Show container logs on failure
        if: failure()
        run: |
          docker compose logs --no-log-prefix app || true
          docker compose logs --no-log-prefix nginx || true
          docker compose logs --no-log-prefix db || true

      - name: Tear down
        if: always()
        run: docker compose down -v
